' ************************************************************************************
' Subroutine 2: Bloomberg Data Extraction, Delta Calculation, and Commenting
' ************************************************************************************
Sub Process_Step2_BloombergAndCalc(ByVal wbTarget As Workbook)

    ' === Date Input Variables ===
    Dim sTargetDate As String ' e.g., "20250930"
    Dim sStartDate As String  ' e.g., "20250926"
    Dim sEndDate As String    ' e.g., "20251004"
    
    ' === Local Declarations ===
    Dim ws As Worksheet
    Set ws = wbTarget.Sheets("CombinedData")
    Dim lRow As Long: lRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
    
    ' Output Columns Indexing
    Dim tickerCol As Long: tickerCol = FindHeaderInSheet(ws, "Ticker")
    Dim bbStatusCol As Long: bbStatusCol = FindHeaderInSheet(ws, "BB Status")
    Dim navCol As Long: navCol = FindHeaderInSheet(ws, "NAV")
    Dim latestNavCol As Long: latestNavCol = FindHeaderInSheet(ws, "Latest NAV")
    Dim deltaCol As Long: deltaCol = FindHeaderInSheet(ws, "Delta")
    Dim commentsCol As Long: commentsCol = FindHeaderInSheet(ws, "Comment")

    If lRow < 2 Then Exit Sub ' No data

    ' === 1. GET DATE INPUT FROM USER (Flexible Month-to-Month Change) ===
    
    ' Prompt for Target Date (Pass 1)
    sTargetDate = Application.InputBox( _
        Prompt:="Enter Target NAV Date (YYYYMMDD, e.g., 20250930):", _
        Title:="Bloomberg Target Date", Type:=2)
        
    If sTargetDate = "False" Or sTargetDate = "" Then Exit Sub ' User cancelled
    
    ' Prompt for Fallback Range (Pass 2)
    sStartDate = Application.InputBox( _
        Prompt:="Enter Fallback Start Date (YYYYMMDD, e.g., 20250926):", _
        Title:="Bloomberg Range Start Date", Type:=2)
        
    If sStartDate = "False" Or sStartDate = "" Then Exit Sub
    
    sEndDate = Application.InputBox( _
        Prompt:="Enter Fallback End Date (YYYYMMDD, e.g., 20251004):", _
        Title:="Bloomberg Range End Date", Type:=2)
        
    If sEndDate = "False" Or sEndDate = "" Then Exit Sub

    ' === 2. BLOOMBERG FORMULA APPLICATION (PASS 1: Target Date) ===
    
    Application.Calculation = xlCalculationAutomatic 
    
    ' BB Status Formula (Direct BDP)
    ws.Cells(2, bbStatusCol).FormulaR1C1 = _
        "=IFERROR(BDP(RC" & tickerCol & ",""MARKET_STATUS""),""#N/A"")"
    
    ' NAV Formula (BDH - Single Target Date)
    ws.Cells(2, navCol).FormulaR1C1 = _
        "=IFERROR(BDH(RC" & tickerCol & ",""FUND_TOTAL_ASSETS"",""" & sTargetDate & """,""" & sTargetDate & """,""points=1""),""#N/A"")"
        
    ' BB Currency Formula (Optional BDP)
    ' ws.Cells(2, bbCcyCol).FormulaR1C1 = _
    '    "=IFERROR(BDP(RC" & tickerCol & ",""CURRENCY""),""#N/A"")"

    ' Fill formulas down
    ws.Range(ws.Cells(2, bbStatusCol), ws.Cells(lRow, bbStatusCol)).FillDown
    ws.Range(ws.Cells(2, navCol), ws.Cells(lRow, navCol)).FillDown
    ' ws.Range(ws.Cells(2, bbCcyCol), ws.Cells(lRow, bbCcyCol)).FillDown

    ' Wait for data fetch
    Application.Calculate
    
    ' Convert formulas to values (BB Status, NAV)
    ws.Columns(bbStatusCol).Copy: ws.Columns(bbStatusCol).PasteSpecial xlPasteValues
    ws.Columns(navCol).Copy: ws.Columns(navCol).PasteSpecial xlPasteValues
    ' ws.Columns(bbCcyCol).Copy: ws.Columns(bbCcyCol).PasteSpecial xlPasteValues
    Application.CutCopyMode = False
    
    ' === 3. BLOOMBERG FORMULA APPLICATION (PASS 2: Date Range for #N/A) ===
    
    ' Re-enable auto calculation for Pass 2
    Application.Calculation = xlCalculationAutomatic
    
    Dim r As Long
    For r = 2 To lRow
        ' Check for #N/A value in NAV column
        If CStr(ws.Cells(r, navCol).Value) = "#N/A" Then
            ' Apply the Date Range formula
            ws.Cells(r, navCol).FormulaR1C1 = _
                "=IFERROR(BDH(RC" & tickerCol & ",""FUND_TOTAL_ASSETS"",""" & sStartDate & """,""" & sEndDate & """,""points=1""),""#N/A"")"
        End If
    Next r
    
    ' Wait for data fetch from Pass 2
    Application.Calculate
    
    ' Final convert formulas to values for NAV
    ws.Columns(navCol).Copy: ws.Columns(navCol).PasteSpecial xlPasteValues
    Application.CutCopyMode = False
    
    ' Set calculation back to Manual
    Application.Calculation = xlCalculationManual 

    
    ' === 4. DELTA CALCULATION & COMMENTING ===
    
    ' Delta formula: (NAV - latest nav) / latest NAV 
    ws.Cells(2, deltaCol).FormulaR1C1 = "=(RC" & navCol & " - RC" & latestNavCol & ") / RC" & latestNavCol
    ws.Range(ws.Cells(2, deltaCol), ws.Cells(lRow, deltaCol)).FillDown
    
    ' Format as Percentage and Convert to Values
    ws.Columns(deltaCol).NumberFormat = "0.00%"
    ws.Columns(deltaCol).Copy: ws.Columns(deltaCol).PasteSpecial xlPasteValues
    Application.CutCopyMode = False
    
    ' Commenting logic 
    Dim deltaVal As Variant
    For r = 2 To lRow
        deltaVal = ws.Cells(r, deltaCol).Value
        
        ' Note: IsError will catch #N/A, #DIV/0!, etc.
        If IsError(deltaVal) Or IsEmpty(deltaVal) Then
            ws.Cells(r, commentsCol).Value = "Delta Error"
        ' Check: Above 100% (1) or Below -50% (-0.5)
        ElseIf deltaVal > 1 Or deltaVal < -0.5 Then 
            ws.Cells(r, commentsCol).Value = "Delta Check"
        Else
            ws.Cells(r, commentsCol).Value = "Update"
        End If
    Next r
    
End Sub
